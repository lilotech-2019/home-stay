@using Outsourcing.Data.Models
@model IEnumerable<Outsourcing.Data.Models.RoomOrder>
@{
    ViewBag.Title = "Quản lý Booking";
}

@section breadcrumb
    {
    <li class="active">RoomOrders</li>
}

<div class="page-header">
    <h1>
        Quản Lý Đặt Phòng
        <small>
            <i class="ace-icon fa fa-angle-double-right"></i>
            overview
        </small>
    </h1>
</div><!-- /.page-header -->
<div class="page-content">
    <div class="row">
        <div class="col-xs-12">
            <a class="btn btn-success" href="@Url.Action("Create" )" style="margin-bottom: 10px">Thêm mới</a>

            <div class="table-header">Danh sách Đặt phòng</div>

            <table id="productTable" class="table table-bordered table-striped table-fixed-header">
                <thead>
                    <tr role="row">
                        <th>#</th>
                        <th>Tên Khách sạn</th>
                        <th>Tên phòng</th>
                        <th>Tên khách hàng</th>
                        <th>Điện Thoại</th>
                        <th>Ngày Checkin</th>
                        <th>Ngày Checkout</th>
                        <th>Trạng Thái</th>
                        <th>@Resources.Resources.Action</th>
                    </tr>
                </thead>
                <tbody role="alert" aria-live="polite" aria-relevant="all">
                    @if (Model != null && Model.Any())
                    {
                        var count = 0;
                        foreach (var item in Model)
                        {
                            count++;

                            <tr class="">
                                <td>@count</td>
                                <td class="">
                                    <a href="@Url.Action("Index", "Hotels", new {id = item.Room.Hotel.Id})">@item.Room.Hotel.Name</a>
                                </td>
                                <td class="">
                                    <a href="@Url.Action("Index", "Rooms", new {id = item.RoomId})">@item.Room.Name</a>
                                </td>

                                <td class="">@item.Customer.Name</td>
                                <td class="">@item.Customer.Phone</td>
                                <td class="">@item.CheckIn</td>
                                <td class="">@item.CheckOut</td>

                                <td class="hidden-480 ">
                                    @{
                                        var status = item.OrderStatus;
                                        switch (status)
                                        {
                                            case RoomOrderStatus.New:
                                                <span class="label label-sm label-warning">Đợi xác nhận</span>
                                                <button class="btn btn-xs btn-default" id="updateStatus" data-url="@Url.Action("UpdateStatus", new {id = item.Id, status = RoomOrderStatus.CheckIn})">Checkin</button>
                                                break;
                                            case RoomOrderStatus.Processed:
                                                <span class="label label-sm label-success">Đã xử lý</span>
                                                break;
                                            case RoomOrderStatus.CheckIn:
                                                <span class="label label-sm label-success">Đã check in</span>
                                                <a href="@Url.Action("Checkout", new {id = item.Id})" class="btn btn-xs btn-default">Checkout</a>
                                                break;
                                            case RoomOrderStatus.CheckOut:
                                                <span class="label label-sm label-success">Đã check out</span>
                                                break;
                                            default:
                                                throw new ArgumentOutOfRangeException();
                                        }
                                    }
                                </td>


                                <td class=" ">
                                    <div class="visible-md visible-lg  btn-group">
                                        <a href="@Url.Action("Details", new {id = item.Id})" class="btn btn-xs btn-secondary">
                                            <i class="fa fa-bookmark"></i>
                                        </a>
                                        <a href="@Url.Action("Edit", new {id = item.Id})" class="btn btn-xs btn-info">
                                            <i class="fa fa-edit"></i>
                                        </a>
                                        <a href="@Url.Action("Delete", new {id = item.Id})" class="btn btn-xs btn-danger">
                                            <i class="fa fa-trash"></i>
                                        </a>

                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


@section scripts{
    <script src="~/Content/admin/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="~/Content/admin/js/jquery.dataTables.bootstrap.js" type="text/javascript"></script>

    <script type="text/javascript">

        $(document).ready(function () {
            $("#updateStatus").on("click",
                function () {
                    var url = $(this).attr("data-url");
                    $.ajax({
                        url: url,
                        success: function () {
                            window.location.reload();
                        },
                        error: function (err) {
                            console.log(err);
                        }
                    });
                });
            $("#processed").on("click",
                function () {
                    var url = $(this).attr("data-href");
                    window.location.href = url;
                });
        });
        // $("updateStatus").getJSON();

        $(document).ready(function () {
            var table = $("#productTable").DataTable();
            //var arrayfilter = [2, 4];

            createDropFilter(table, [2]);
            bindDropFilter(table, [5]);

        });

        function createDropFilter(table, array) {
            array.forEach(function (i) {
                var selector = ".filter_" + i;
                var filter1 = $(selector);
                filter1.on('change',
                    function () {
                        table.column(i)
                            .search($(this).val())
                            .draw();
                    });

                table.column(i).data().unique().sort().each(function (d, j) {
                    filter1.append('<option value="' + d + '">' + d + '</option>');
                });

            });
        }

        function bindDropFilter(table, array) {
            array.forEach(function (i) {
                var selector = ".filter_" + i;
                var filter1 = $(selector);
                filter1.on('change',
                    function () {
                        table.column(i)
                            .search($(this).val())
                            .draw();
                    });
            });
        }
    </script>
}