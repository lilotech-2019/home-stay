@model Outsourcing.Data.Models.HMS.CostCategory

@{
    ViewBag.Title = "CostCategory Edit";
}

@section breadcrumb
{
    <div class="breadcrumbs" id="breadcrumbs">
        <script type="text/javascript">
            try {
                ace.settings.check('breadcrumbs', 'fixed');
            } catch (e) {
            }
        </script>

        <ul class="breadcrumb">
            <li>
                <i class="icon-home home-icon"></i>
                <a href="/">Home</a>
            </li>
            <li>
                <i class="icon-edit"></i>
                <a href="@Url.Action("Index")">Quản lý Chi Phí</a>
            </li>
            <li class="active">Chinh sua Chi Phí</li>
        </ul>
    </div>
}

<div class="page-content">
    <div class="row">
        <div class="col-xs-12">
            <div class="alert alert-block alert-info">
                Thêm Mới Khách Sạn
            </div>
            @using (Html.BeginForm("Edit", null, FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)



                <div class="form-group col-sm-6 col-md-12">

                    @Html.LabelFor(model => model.CategoryParentId, "CategoryParentId", new { @class = "col-sm-3 control-label no-padding-right" })
                    <div class="col-sm-9">
                        @Html.DropDownList("CategoryParentId")
                        @Html.ValidationMessageFor(model => model.CategoryParentId)
                    </div>
                </div>
                <div class="form-group col-sm-6 col-md-12">
                    @Html.LabelFor(model => model.Name, new { @class = "col-sm-3 control-label no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.Name, null, new { @class = "col-xs-10 col-sm-5" })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>

                <div class="form-group col-sm-6 col-md-12">
                    @Html.LabelFor(model => model.Icon, new { @class = "col-sm-3 control-label no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.Icon, null, new { @class = "col-xs-10 col-sm-5" })
                        @Html.ValidationMessageFor(model => model.Icon)
                    </div>
                </div>

                <div class="form-group col-sm-6 col-md-12">
                    @Html.LabelFor(model => model.Noted, new { @class = "col-sm-3 control-label no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.Noted, null, new { @class = "col-xs-10 col-sm-5" })
                        @Html.ValidationMessageFor(model => model.Noted)
                    </div>
                </div>

                <div class="form-group col-sm-6 col-md-12">
                    @Html.LabelFor(model => model.Status, new { @class = "col-sm-3 control-label no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.Status, null, new { @class = "col-xs-10 col-sm-5" })
                        @Html.ValidationMessageFor(model => model.Status)
                    </div>
                </div>

                <div class="form-group col-sm-6 col-md-12">
                    @Html.LabelFor(model => model.DateCreated, new { @class = "col-sm-3 control-label no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.DateCreated, null, new { @class = "col-xs-10 col-sm-5" })
                        @Html.ValidationMessageFor(model => model.DateCreated)
                    </div>
                </div>


                <div class="form-group col-sm-6 col-md-12">
                    @Html.LabelFor(model => model.Description, new { @class = "col-sm-3 control-label no-padding-right" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.Description, "CkEditor")
                        @Html.ValidationMessageFor(model => model.Description)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <input type="submit" value="Tạo mới" class="btn btn-primary" />
                        <input type="reset" value="Reset" class="btn" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
