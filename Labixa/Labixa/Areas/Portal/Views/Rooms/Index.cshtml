

@model IEnumerable<Outsourcing.Data.Models.Room>

@{
    ViewBag.Title = "Index";
    var count = 0;
    var roomId = 0;
}

<h2>Tên trang</h2>
@section scripts{
    <script src="~/Content/admin/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="~/Content/admin/js/jquery.dataTables.bootstrap.js" type="text/javascript"></script>
}
<p>
    @Html.ActionLink("Tạo mới", "Create", new { hotelId = ViewBag.HotelId }, new { @class = "btn btn-primary" })
</p>
<div class="row">
    <div class="col-xs-12">
        <h3 class="header smaller lighter blue">Tên Trang</h3>
        <div class="table-header">Tên bảng</div>
        <table id="datatable" class="table table-striped table-bordered table-hover">
            <thead>

                <tr>
                    <th>#</th>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SharePercent)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Price)
                    </th>

                    <th>@Resources.Resources.Action</th>
                </tr>
            </thead>

            <tbody>



                @foreach (var item in Model)
                {
                    count++;
                    <tr>
                        <td>@count</td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                            <button class="btn btn-xs btn-success" data-toggle="modal" data-target="#phoneModal" onclick="setRoomId(@item.Id)">Order</button>

                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SharePercent)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>

                        <td class=" ">
                            <div class="visible-md visible-lg  btn-group">

                                <a href="@Url.Action("Edit", new {id = item.Id})" class="btn btn-xs btn-info">
                                    <i class="fa fa-edit"></i>
                                </a>
                                <a href="@Url.Action("Delete", new {id = item.Id})" class="btn btn-xs btn-danger">
                                    <i class="fa fa-trash"></i>
                                </a>

                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@using (Html.BeginForm("Create", "RoomOrders", null , FormMethod.Get, new { @class = "form-horizontal" }))
{
    <div id="phoneModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Xin vui lòng nhập số điện thoại</h4>
                </div>
                <div class="modal-body">
                    <input hidden name="roomId" id="txtRoomId" type="text"/>
                    @Html.TextBox("phone")
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Done</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}



<script type="text/javascript">

    function setRoomId(id) {
        document.getElementById("txtRoomId").value = id;
    }

    $(document).ready(function () {
        var table = $("#datatable").DataTable();

        createDropFilter(table, [2]);
        bindDropFilter(table, [5]);

    });

    function createDropFilter(table, array) {
        array.forEach(function (i) {
            var selector = ".filter_" + i;
            var filter1 = $(selector);
            filter1.on('change',
                function () {
                    table.column(i)
                        .search($(this).val())
                        .draw();
                });

            table.column(i).data().unique().sort().each(function (d, j) {
                filter1.append('<option value="' + d + '">' + d + '</option>');
            });

        });
    }

    function bindDropFilter(table, array) {
        array.forEach(function (i) {
            var selector = ".filter_" + i;
            var filter1 = $(selector);
            filter1.on('change',
                function () {
                    table.column(i)
                        .search($(this).val())
                        .draw();
                });
        });
    }
</script>
